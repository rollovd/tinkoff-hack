import telebot
import config
from dictionary_answer import dictionary_answer
from Processing import Processing

process = Processing()
bot = telebot.TeleBot(config.TOKEN)

@bot.message_handler(commands=['start'])
def welcome(message):
    markup = telebot.types.InlineKeyboardMarkup(row_width=2)
    item1 = telebot.types.InlineKeyboardButton('–î–∞, –∫–æ–Ω–µ—á–Ω–æ!', callback_data='game_yes')
    item2 = telebot.types.InlineKeyboardButton('–ù–µ—Ç, –º–Ω–µ —ç—Ç–æ –Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ.', callback_data='game_no')

    markup.add(item1, item2)

    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name}</b>, –º–µ–Ω—è –∑–æ–≤—É—Ç –±–æ—Ç <b>–û–ª–µ–≥</b>! *–¢–µ–∫—Å—Ç*.\n–•–æ—á–µ—à—å –ø–æ–∏–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—É? ü§†',
                     reply_markup=markup,
                     parse_mode='html')

@bot.message_handler(content_types=['text'])
def send_message(message):
    if message.chat.type == 'private':
        message_text = process.coord_idenify(message.text)

        if message.text == '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ, –∏–¥—ë–º –¥–∞–ª—å—à–µ!\n–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏–≥—Ä—ã: ':
            markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = telebot.types.KeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –û–ª–µ–≥–æ–≤!')
            item2 = telebot.types.KeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ê—Ä–µ–Ω—ã!')
            item3 = telebot.types.KeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å—ë!')
            markup.add(item1, item2, item3)

            bot.send_message(message.chat.id, f'–ß—Ç–æ –≤—ã–±–µ—Ä–µ–º, {message.from_user.first_name}?', reply_markup=markup)

        elif isinstance(message_text, tuple):
            lat, lon = message_text

            markup = telebot.types.InlineKeyboardMarkup(row_width=2)
            item1 = telebot.types.InlineKeyboardButton('–î–∞', callback_data='yes_catch_oleg')
            item2 = telebot.types.InlineKeyboardButton('–ù–µ—Ç', callback_data='no_catch_oleg')

            markup.add(item1, item2)
            bot.send_message(message.chat.id, f'–¢–∞–∫-—Å, –¥–∞–≤–∞–π –ø—Ä–æ–≤–µ—Ä–∏–º:\n–®–∏—Ä–æ—Ç–∞ = {lat}, –î–æ–ª–≥–æ—Ç–∞ = {lon}\n–í—Å—ë –≤–µ—Ä–Ω–æ?',
                             reply_markup=markup)

@bot.callback_query_handler(func=lambda cell: True)
def callback_inline(call):
    try:
        if call.message:
            key = call.data
            text = dictionary_answer[key]

            if key == 'game_yes':
                markup = telebot.types.InlineKeyboardMarkup(row_width=4)
                item1 = telebot.types.InlineKeyboardButton('–ü–æ–∏–º–∫–∞ –û–ª–µ–≥–∞! üèÉüèª', callback_data='catch_oleg')
                item2 = telebot.types.InlineKeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å –ê—Ä–µ–Ω—ã! ü§º', callback_data='show_arena')
                item3 = telebot.types.InlineKeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å –ú–µ—à–æ–∫! ‚Äçüíº ', callback_data='show_bag')

                markup.add(item1, item2)
                markup.add(item3)

                bot.send_message(call.message.chat.id,
                                 text,
                                 reply_markup=markup,
                                 parse_mode='html')
            else:
                bot.send_message(call.message.chat.id, text)

    except Exception as e:
        print(repr(e))

if __name__ == "__main__":
    bot.polling(none_stop=True)

